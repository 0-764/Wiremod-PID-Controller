@name PID
@inputs Input Setpoint Limit Enabled
@outputs Output
@persist  

# Program Variables
LastTime = 0
ErrSum = 0
LastInput = 0 # PID Derivative Kick
ITerm = 0
LastErr = 0

OutMin = 0
OutMax = 1000

#
SampleTime = 10
KP = 0.5
KI = 0
KD = 0

function compute() {

    ## Manual Mode Avoids PID
    if(Enabled == 0){
        return
    }

    Now = systime()
    TimeChange = Now - LastTime
    
    # Compute working error variables
    Err = Setpoint - Input
    ITerm += (KI * Err)
    
    # RESET Windup
    if(ITerm > OutMax) {
        ITerm = OutMax 
    } elseif (ITerm < OutMin) {
        ITerm = OutMin 
    }
    
    DInput = (Input - LastInput)
    
    Output = (KP * Err) + ITerm - (KD * DInput)
    
    # RESET WindUp
    if(Output > OutMax) {
        Output = OutMax   
    } elseif(Output < OutMin) {
        Output = OutMin
    }
    
    # Remember variables for next time
    LastErr = Err
    LastTime = Now 
    
}

function init() {
    LastInput = Input
    ITerm = Output
    if(ITerm > OutMax) {
        ITerm = OutMax   
    } elseif(ITerm < OutMin) {
        ITerm = OutMin
    }
}

# Constructor
if(first()) {
    init()
    runOnTick(SampleTime)   
} 

## PROGRAM
compute()


